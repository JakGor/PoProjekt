<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RezerwacjaSal</name>
    </assembly>
    <members>
        <member name="T:RezerwacjaSal.Budynek">
            <summary>
            Klasa zawiera podstawowe dane o budynku: wchodzące w jego skład sale i informacje o użytecznościach np. windzie
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Budynek.Nazwa">
            <summary>
            Nazwa budynku
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Budynek.ListaSal">
            <summary>
            Lista sal w budynku
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Budynek.Winda">
            <summary>
            Zmienna logiczna odpowiadająca na pytanie czy w budynku jest winda
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Budynek.Gastronomia">
            <summary>
            Zmienna logiczna odpowiadająca na pytanie czy w budynku jest zaplecze gastronomiczne
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Budynek.Wifi">
            <summary>
            Zmienna logiczna odpowiadająca na pytanie czy w budynku jest ogólnodostępne Wi-Fi
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Budynek.#ctor">
            <summary>
            Pusty konstruktor na potrzevy serializacji, nie zaleca się jego używania
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Budynek.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Główny konstruktor, użyteczności wpisywać za pomocą true lub false
            </summary>
            <param name="nazwa">Nazwa budynku</param>
            <param name="winda">Winda</param>
            <param name="gastronomia">Gastronomia</param>
            <param name="wifi">Internet bezprzewodowy</param>
        </member>
        <member name="M:RezerwacjaSal.Budynek.ToString">
            <summary>
            Dodaje salę, a jeżeli taka istnieje to wypisuje komunikat a program dalej działa
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Budynek.DodajSale(RezerwacjaSal.Sala)">
            <summary>
            Dodaje salę do budynku
            </summary>
            <param name="s">Obiekt typu sala</param>
        </member>
        <member name="M:RezerwacjaSal.Budynek.ZapiszXml(System.String)">
            <summary>
            Serializacja obiektu do pliku o podanej nazwie, podawanej jako argument bez rozszerzenia ".xml"
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
        </member>
        <member name="M:RezerwacjaSal.Budynek.OdczytajXml(System.String)">
            <summary>
            Deserializacja z pliku do obiektu zwracanego przez metodę 
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
            <returns>Zwraca obiekt typu Budynek</returns>
        </member>
        <member name="M:RezerwacjaSal.Budynek.Clone">
            <summary>
            Konieczne może być rzutowanie obiektu po klonowaniu!!!
            Klonowanie polega na serializacji obecnej instancji do pliku o nazwie "Klonowanie_najemcy.xml",
            a następnie deserializacji z tego pliku do zupełnie nowego obiektu, który jest zwracany przez metodę
            </summary>
            <returns></returns>
        </member>
        <member name="T:RezerwacjaSal.Dodatki">
            <summary>
            Klasa abstrakcyjna zawierająca dodatkowe elementy
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Dodatki.StringZnaki">
            <summary>
            Zawiera znaki akceptowalne podczas wpisywania stringów 
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Dodatki.SprawdźString(System.String,System.Char[])">
            <summary>
            Sprawdza czy długość stringa jest większa od 1 i czy zawiera tylko litery łacińskiego alfabetu lub znaki
            podane przez nas w tablicy znaków
            </summary>
            <param name="str"></param>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="T:RezerwacjaSal.IRezerwowalny">
            <summary>
            Interfejs zawiera metody: DodajRezerwację,UsuńRezerwacje,ZnajdźRezerwację
            </summary>
        </member>
        <member name="T:RezerwacjaSal.KonstruktorException">
            <summary>
            Klasa to wyjątek wypisujący specjalny komunikat, mająca zastosowanie głównie przy sprawdzaniu argumentów konstruktorów
            </summary>
        </member>
        <member name="M:RezerwacjaSal.KonstruktorException.#ctor">
            <summary>
            Konstruktor domyślny, 
            </summary>
        </member>
        <member name="M:RezerwacjaSal.KonstruktorException.#ctor(System.String)">
            <summary>
            Konstruktor nadpisuje domyślną wiadomość
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:RezerwacjaSal.ModelContext">
            <summary>
            Klasa uzywana w podejściu Code First - odwzorowuje strukturę kodu w nową bazę danych
            </summary>
        </member>
        <member name="P:RezerwacjaSal.ModelContext.Najemcy">
            <summary>
            Tabela zawierająca najemców
            </summary>
        </member>
        <member name="P:RezerwacjaSal.ModelContext.Rezerwacje">
            <summary>
            Tabela zawierająca Rezerwacje
            </summary>
        </member>
        <member name="P:RezerwacjaSal.ModelContext.Sale">
            <summary>
            Tabela zawierająca sale
            </summary>
        </member>
        <member name="T:RezerwacjaSal.Płcie">
            <summary>
            Zmienna enumerowana opisująca płeć
            
            </summary>
        </member>
        <member name="T:RezerwacjaSal.Najemca">
            <summary>
            Klasa zawiera podstawowe dane o najemcy, który może zarezerwować salę.
            Wchodzi w skład klasy rezerwacja.
            Dziedziczy po klasie dodatki i wykorzystuje interfejs ICloneable.
            Podlega serializacji do xml.
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Najemca.Imię">
            <summary>
            Imię jest typu string, musi być ono dłuższe niż 1 i zawierać wyłącznie znaki polksiego alfabetu 
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Najemca.Pesel">
            <summary>
            Pesel musi być stringiem o 11 cyfr i posiadać poprawną cyfrę kontrolną
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Najemca.Płeć">
            <summary>
            Enumerator  Plcie zawiera dane nt płci
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Najemca.Nazwisko">
            <summary>
            Nazwsko musi mieć więcej niż 1 znak
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Najemca.#ctor">
            <summary>
            Pusty konstruktor na potrzeby serializacji, ustawia pesel na 11 zer, nie zaleca się jego używania
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Najemca.#ctor(System.String,System.String,System.String,RezerwacjaSal.Płcie)">
            <summary>
            Główny konstruktor podczas pracy z programem używać tylko jego, używa właściwości sprawdzających poprawność danych
            </summary>
            <param name="imię"> Obiekt typu string zawierający imię</param>
            <param name="nazwisko"> Obiekt typu string zawierający nazwisko</param>
            <param name="pesel">Obiekt typu string zawierający PESEL</param>
            <param name="płeć">Obiekt typu Plcie (enum) przechowujący Płeć</param>
        </member>
        <member name="M:RezerwacjaSal.Najemca.ToString">
            <summary>
            Zwraca sformatowany string zawierający: imie, nazwisko, płeć, 
            pesel jest pomijany ponieważ stanowi hasło do usuwania rezerwacji
            </summary>
            <returns> Zwracany jest opis konkretnego najemcy</returns>
        </member>
        <member name="M:RezerwacjaSal.Najemca.ZapiszXml(System.String)">
            <summary>
            Serializacja obiektu do pliku o podanej nazwie, podawanej jako argument bez rozszerzenia ".xml"
            </summary>
            <param name="nazwa"> Nazwa plku XML</param>
        </member>
        <member name="M:RezerwacjaSal.Najemca.OdczytajXml(System.String)">
            <summary>
            Deserializacja z pliku do obiektu zwracanego przez metodę 
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
            <returns> Zwraca obiekt typu Najemca</returns>
        </member>
        <member name="M:RezerwacjaSal.Najemca.Clone">
            <summary>
            Konieczne może być rzutowanie obiektu po klonowaniu!
            Klonowanie polega na serializacji obecnej instancji do pliku o nazwie "Klonowanie_najemcy.xml",
            a następnie deserializacji z tego pliku do zupełnie nowego obiektu, który jest zwracany przez metodę
            </summary>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Najemca.sprawdzPESEL(System.String)">
            <summary>
            Metoda sprawdzająca czy podany PESEL jest poprawny
            </summary>
            <param name="PESEL">Obiekt typu string zawierający PESEL</param>
            <returns> Wartość true oznacza poprawność nr PESEL</returns>
        </member>
        <member name="M:RezerwacjaSal.Najemca.ZapisSQL">
            <summary>
            Metoda zapisująca najemców do bazy danych SQL
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Najemca.WypiszQuery">
            <summary>
            Przykładowe zapytanie skierowane do bazy danych, wypisywane w konsoli
            </summary>
        </member>
        <member name="T:RezerwacjaSal.Rezerwacja">
            <summary>
            Klasa zawiera dane o rezerwacji m.in. dane najemcy, datę i czas.
            Wchodzi w skład klasy Sala.
            Wykorzystuje interfejsy IComparable i ICloneable, podlega serializacji xml.
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Numer">
            <summary>
            Nr rezerwacji pozwalający na jej identyfikację
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Najem">
            <summary>
            Sprawdza czy najemca nie był utworzony pustym konstruktorem
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Dzień">
            <summary>
            Sprawdza czy data nie jest ustawiana na przeszłość
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Godz_pocz">
            <summary>
            Sprawdza czy godzina nie jest ustawiana na przeszłość, nie podlega serializacji bo to TimeSpan
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Godz_pocz_serializacja">
            <summary>
            Sposób na serializacje TimeSpan-użycie metody Ticks(najmniejsz jednostka czasu w .NET), która zwraca wartość w typie long
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Godzina_końcowa">
            <summary>
            Sprawdza czy godzina nie jest ustawiana na przeszłość, nie podlega serializacji bo to TimeSpan
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Godzina_końcowa_serializacja">
            <summary>
            Sposób na serializacje TimeSpan-użycie metody Ticks(najmniejsz jednostka czasu w .NET), która zwraca wartość w typie long
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Rezerwacja.Kolejność_rezerwacji">
            <summary>
            Służy do automatycznego nadawania numerów dla rezerwacji,ale jeżeli zostaną poprawnie dodane do sali
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.#ctor">
            <summary>
            Pusty konstruktor na potrzeby serializacji, ustawia numer na -1 tak można rozpoznać obiekt
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.#ctor(RezerwacjaSal.Najemca,System.String,System.String,System.String)">
            <summary>
            Główny konstruktor podczas pracy z programem używać tylko jego,
            Możliwe formaty daty: "yyyy-MM-dd", "yyyy/MM/dd", "MM/dd/yy", "dd-MMM-yy", "dd/MM/yyyy", "dd-MM-yyyy"
            Format godziny: "H:mm"
            </summary>
            <param name="najemca"> Obiekt klasy najemca</param>
            <param name="dzień"> Dzień w którym chcemy dokonać rezerwacji</param>
            <param name="godzina_początkowa"> Godzina początkowa rezerwacji</param>
            <param name="godzina_końcowa">Godzina końcowa rezerwacji</param>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.ToString">
            <summary>
            Zwraca string zawierający: numer rezerwacji, dane najemcy, datę, godziny
            </summary>
            <returns> Zwraca opis rezerwacji</returns>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.CompareTo(RezerwacjaSal.Rezerwacja)">
            <summary>
            porównuje Rezerwacje najpierw po dniu potem na podstawie godziny początkowej
            </summary>
            <param name="r">Obiekt typu rezerwacja</param>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.ZapiszXml(System.String)">
            <summary>
            Serializacja obiektu do pliku o podanej nazwie, podawanej jako argument bez rozszerzenia ".xml"
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.OdczytajXml(System.String)">
            <summary>
            Deserializacja z pliku do obiektu zwracanego przez metodę 
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Rezerwacja.Clone">
            <summary>
            Konieczne może być rzutowanie obiektu po klonowaniu!!!
            Klonowanie polega na serializacji obecnej instancji do pliku o nazwie "Klonowanie_najemcy.xml",
            a następnie deserializacji z tego pliku do zupełnie nowego obiektu, który jest zwracany przez metodę
            </summary>
            <returns> Zwraca obiekt będący lonem</returns>
        </member>
        <member name="T:RezerwacjaSal.Właściwość">
            <summary>
            Enumerator oznaczający typ sali
            </summary>
        </member>
        <member name="T:RezerwacjaSal.Sala">
            <summary>
            Klasa zawiera podstawowe dane o sali oraz wszystkie rezerwacje tej sali.
            Wchodzi w skład klasy Budynek.
            Wykorzystuje interfejsy IComparable i ICloneable, podlega serializacji xml.
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.Nazwa">
            <summary>
            Służy do automatycznego nadawania id
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.Id">
            <summary>
            Id nadaje unikalny nr sali w budynku
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.Typ">
            <summary>
            Typ sali (zmienna enumerowana)
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.Pojemność">
            <summary>
            Pojemność oznacza ile miejsc znajduje sięw sali
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.ListaRezerwacji">
            <summary>
            Lista rezerwacji danej sali
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.LiczbaRezerwacji">
            <summary>
            Liczba rezerwacji danej sali
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Sala.Kolejność_sal">
            <summary>
            Zmienna statyczna oznaczająca kolejność sal
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Sala.#ctor">
            <summary>
            Pusty konstruktor na potrzeby serializacji, ustawia Id na -1 tak można rozpoznać obiekt
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Sala.#ctor(System.String,RezerwacjaSal.Właściwość,System.Int32)">
            <summary>
            Główny konstruktor do pracy w programie
            </summary>
            <param name="nazwa">Nazwa sali</param>
            <param name="typ">Typ sali</param>
            <param name="pojemność">Liczba miejsc</param>
        </member>
        <member name="M:RezerwacjaSal.Sala.ToString">
            <summary>
            Zwraca string zawierający: nazwę, id, typ, pojemność oraz wszystkie rezerwacje
            </summary>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.SprawdźRezerwację(RezerwacjaSal.Rezerwacja)">
            <summary>
            Metoda sprawdza, czy rezerwacja o danej godzinie początkowej i końcowej jest możliwa
            </summary>
            <param name="r">Obiekt rezerwacja</param>
            <returns>Zwraca prawdę, gdy można dodać rezerwację</returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.DodajRezerwację(RezerwacjaSal.Rezerwacja)">
            <summary>
            Dodawanie rezerwacji, gdy jest zajęta wyskakuje komunikat ale pracujemy dalej, gdy doda się sale pomyślnie
            dostaje ona przydzielony numer, lista sortowana jest po każdym dodaniu
            </summary>
            <param name="r">Obiekt typu rezerwacja</param>
        </member>
        <member name="M:RezerwacjaSal.Sala.DodajRezerwację(RezerwacjaSal.Rezerwacja,System.Int32)">
            <summary>
            Metoda dodawani sali z ręcznym ustawieniem numeru. Używana w czasie inicjalizacji GUI
            </summary>
            <param name="r">Obiekt typu rezerwacja</param>
            <param name="nr">Ręcznie podany nr rezerwacji</param>
        </member>
        <member name="M:RezerwacjaSal.Sala.UsuńRezerwację(RezerwacjaSal.Rezerwacja,System.String)">
            <summary>
            Usuwa rezerwację jeżeli poda się prawidłowy pesel, pierwszym argumentem powinna być funkcja ZnajdźRezerwację
            z oodpowiednim parametrem wyszukiwania
            </summary>
            <param name="r">Obiekt typu rezerwacja</param>
            <param name="pesel">Pesel jest jednicześnie hasłem</param>
        </member>
        <member name="M:RezerwacjaSal.Sala.ZnajdźRezerwację(System.Int32)">
            <summary>
            Zwraca obiekt rezerwacja o podanym numerze, gdy takiego nie ma wyrzuca wyjątek
            </summary>
            <param name="numer">Unikalny dla każdej rezerwacji nr</param>
            <returns>Zwaca obiekt typu rezerwacja</returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.ZnajdźRezerwację(System.DateTime,System.String,System.String)">
            <summary>
            Zwraca obiekt o podanej dacie i czasie, zwraca wyjątek gdy takiego nie ma lub format argumentów jest zły
            </summary>
            <param name="dzień">Dzień w którrym szukamy rezerwacji</param>
            <param name="godzina_początkowa">Godzina początkowa poszukiwanego zakresu</param>
            <param name="godzina_końcowa">Godzina kończąca zakres</param>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.Sortuj">
            <summary>
            Sortuje listę rezerwacji zgodnie z interfejsem IComparable w Rezerwacji
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Sala.CompareTo(RezerwacjaSal.Sala)">
            <summary>
            Za kryterium porównywania obiektów przyjmuje nazwę
            </summary>
            <param name="s">Obiekt typu sala</param>
            <returns></returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.ZapiszXml(System.String)">
            <summary>
            Serializacja obiektu do pliku o podanej nazwie, podawanej jako argument bez rozszerzenia ".xml"
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
        </member>
        <member name="M:RezerwacjaSal.Sala.OdczytajXml(System.String)">
            <summary>
            Deserializacja z pliku do obiektu zwracanego przez metodę 
            </summary>
            <param name="nazwa">Nazwa pliku XML</param>
            <returns>Zwraca obiekt typu sala</returns>
        </member>
        <member name="M:RezerwacjaSal.Sala.Clone">
            <summary>
            Konieczne może być rzutowanie obiektu po klonowaniu!!!
            Klonowanie polega na serializacji obecnej instancji do pliku o nazwie "Klonowanie_najemcy.xml",
            a następnie deserializacji z tego pliku do zupełnie nowego obiektu, który jest zwracany przez metodę
            </summary>
            <returns></returns>
        </member>
        <member name="T:RezerwacjaSal.Zbior">
            <summary>
            Klasa agregująca, zawiera listę wszystkich klientów (najemców) oraz budynków. Powstała w celu ułatwinia współpracy z GUI
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Zbior.SpisBudynkow">
            <summary>
            Wszystkie budynki są agregowane w listę
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Zbior.ListaNajemcow">
            <summary>
            Wszyscy najemcy są agregowani w listę
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Zbior.RezerwacjeRazem">
            <summary>
            Rezerwacje są łączone w jedną listę
            </summary>
        </member>
        <member name="P:RezerwacjaSal.Zbior.Numer">
            <summary>
            Każda rezerwacja posiada swój nr
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Zbior.#ctor">
            <summary>
            Pusty konstruktor
            </summary>
        </member>
        <member name="M:RezerwacjaSal.Zbior.ToString">
            <summary>
            Metoda wypisująca Zbior
            </summary>
            <returns>Zwraca obiekt typu string builder przekonwertowany na stringa</returns>
        </member>
        <member name="M:RezerwacjaSal.Zbior.DodajBudynek(RezerwacjaSal.Budynek)">
            <summary>
            Metoda pozwalająca na dodanie nowego budynku
            </summary>
            <param name="b">Obiekt typu budynek</param>
        </member>
        <member name="M:RezerwacjaSal.Zbior.UsunBudynek(RezerwacjaSal.Budynek)">
            <summary>
            Metoda pozwalająca na usunięcie budynku
            </summary>
            <param name="b">Obiekt typu budynek</param>
        </member>
        <member name="M:RezerwacjaSal.Zbior.DodajNajemce(RezerwacjaSal.Najemca)">
            <summary>
            Metoda pozwalająca nadodanie nowego najemcy
            </summary>
            <param name="n">Obiekt Najemca</param>
        </member>
        <member name="M:RezerwacjaSal.Zbior.UsunNajemce(RezerwacjaSal.Najemca)">
            <summary>
            Metoda pozwalająca na usunięcie najemcy
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:RezerwacjaSal.Zbior.WypiszSale(System.Int32)">
            <summary>
            Metoda wypisująca sale, tak aby były dobrze widoczne w GUI
            </summary>
            <param name="i">Zmenna iteracyjna</param>
            <returns>Zwraca listę sal</returns>
        </member>
        <member name="M:RezerwacjaSal.Zbior.ZapiszXml(System.String)">
            <summary>
            Serializacja obiektu do pliku o podanej nazwie, podawanej jako argument bez rozszerzenia ".xml"
            </summary>
            <param name="nazwa">Nazwapliku XML</param>
        </member>
        <member name="M:RezerwacjaSal.Zbior.OdczytajXml(System.String)">
            <summary>
            Deserializacja z pliku do obiektu zwracanego przez metodę 
            </summary>
            <param name="nazwa"> Nazwa pliku (bez rozszerzenia .xml )</param>
            <returns></returns>
        </member>
    </members>
</doc>
